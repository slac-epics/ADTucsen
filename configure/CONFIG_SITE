# CONFIG_SITE

# Make any application-specific changes to the EPICS build
#   configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#   CONFIG_SITE.Common.$(T_A)
#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)

# CHECK_RELEASE controls the consistency checking of the support
#   applications pointed to by the RELEASE* files.
# Normally CHECK_RELEASE should be set to YES.
# Set CHECK_RELEASE to NO to disable checking completely.
# Set CHECK_RELEASE to WARN to perform consistency checking but
#   continue building anyway if conflicts are found.
CHECK_RELEASE = YES

# Set this when you only want to compile this application
#   for a subset of the cross-compiled target architectures
#   that Base is built for.
#CROSS_COMPILER_TARGET_ARCHS = vxWorks-68040

# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</path/name/to/install/top>

# Set this when your IOC and the host use different paths
#   to access the application. This will be needed to boot
#   from a Microsoft FTP server or with some NFS mounts.
# You must rebuild in the iocBoot directory for this to
#   take effect.
#IOCS_APPL_TOP = </IOC/path/to/application/top>

# Get settings from AREA_DETECTOR, so we only have to configure once for all detectors if we want to
-include $(AREA_DETECTOR)/configure/CONFIG_SITE
-include $(AREA_DETECTOR)/configure/CONFIG_SITE.$(EPICS_HOST_ARCH)
-include $(AREA_DETECTOR)/configure/CONFIG_SITE.$(EPICS_HOST_ARCH).Common
ifdef T_A
  -include $(AREA_DETECTOR)/configure/CONFIG_SITE.Common.$(T_A)
  -include $(AREA_DETECTOR)/configure/CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)
endif


# ====================================
# Added for SLAC Test and Development
# ====================================
TUCAM_EXTERNAL = NO

# Use LCLS PACKAGE_SITE_TOP for both LCLS and PCDS builds
PACKAGE_SITE_TOP=/afs/slac/g/lcls/package/

# CPSW
CPSW_FRAMEWORK_PACKAGE_NAME = cpsw/framework
CPSW_FRAMEWORK_VERSION      = R4.4.1
CPSW_FRAMEWORK_TOP          = $(PACKAGE_SITE_TOP)/$(CPSW_FRAMEWORK_PACKAGE_NAME)/$(CPSW_FRAMEWORK_VERSION)
CPSW_FRAMEWORK_LIB          = $(CPSW_FRAMEWORK_TOP)/$(PKG_ARCH)/lib
CPSW_FRAMEWORK_INCLUDE      = $(CPSW_FRAMEWORK_TOP)/$(PKG_ARCH)/include

# YAML-CPP
YAML_PACKAGE_NAME = yaml-cpp
YAML_VERSION      = yaml-cpp-0.5.3_boost-1.64.0
YAML_TOP          = $(PACKAGE_SITE_TOP)/$(YAML_PACKAGE_NAME)/$(YAML_VERSION)
YAML_LIB          = $(YAML_TOP)/$(PKG_ARCH)/lib
YAML_INCLUDE      = $(YAML_TOP)/$(PKG_ARCH)/include

# BOOST
BOOST_PACKAGE_NAME = boost
BOOST_VERSION      = 1.64.0
BOOST_TOP          = $(PACKAGE_SITE_TOP)/$(BOOST_PACKAGE_NAME)/$(BOOST_VERSION)
BOOST_LIB          = $(BOOST_TOP)/$(PKG_ARCH)/lib
BOOST_INCLUDE      = $(BOOST_TOP)/$(PKG_ARCH)/include

# HPS TPR API
HPSTPR_PACKAGE_NAME=timing/hpsTpr
HPSTPR_VERSION=R2.5.0
HPSTPR_TOP=$(PACKAGE_SITE_TOP)/$(HPSTPR_PACKAGE_NAME)/$(HPSTPR_VERSION)
HPSTPR_LIB=$(HPSTPR_TOP)/$(PKG_ARCH)/lib
HPSTPR_INCLUDE=$(HPSTPR_TOP)/$(PKG_ARCH)/include

# ATCA Common API
COMMONATCA_PACKAGE_NAME=atca/commonATCA
COMMONATCA_VERSION=R1.3.1
COMMONATCA_TOP=$(PACKAGE_SITE_TOP)/$(COMMONATCA_PACKAGE_NAME)/$(COMMONATCA_VERSION)
COMMONATCA_LIB=$(COMMONATCA_TOP)/$(PKG_ARCH)/lib
COMMONATCA_INCLUDE=$(COMMONATCA_TOP)/$(PKG_ARCH)/include

# YamlReader
YAMLREADER_PACKAGE_NAME = cpsw/yamlReader
YAMLREADER_VERSION      = R1.2.0
YAMLREADER_TOP          = $(PACKAGE_SITE_TOP)/$(YAMLREADER_PACKAGE_NAME)/$(YAMLREADER_VERSION)
YAMLREADER_LIB          = $(YAMLREADER_TOP)/$(PKG_ARCH)/lib
YAMLREADER_INCLUDE      = $(YAMLREADER_TOP)/$(PKG_ARCH)/include

# CPSW Device Library
DEVICELIB_PACKAGE_NAME = cpsw/deviceLibrary
DEVICELIB_VERSION      = R1.2.0

# Libraries
SHARED_LIBRARIES = YES
STATIC_BUILD = NO

